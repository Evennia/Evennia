# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Evennia Tests

on:
  push:

jobs:
  sqlite:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8]
    env:
      DB_CONNECTION : sqlite
      DB_DATABASE: evennia
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -e .
    - name: Create Evennia game
      run: |
        make format
        evennia --init testing_mygame
        cp .travis/sqlite3_settings.py testing_mygame/server/conf/settings.py
        cd testing_mygame
        evennia migrate
        evennia collectstatic --noinput
    - name: Test with Evennia Test
      run: |
        cd testing_mygame
        evennia test

  postgres:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8]
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: evennia
          POSTGRES_DB: evennia
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install psycopg2-binary
        pip install -e .
    - name: Create Evennia game
      run: |
        make format
        evennia --init testing_mygame
        cp .travis/postgresql_settings.py testing_mygame/server/conf/settings.py
        cd testing_mygame
        evennia migrate
        evennia collectstatic --noinput
    - name: Test with Evennia Test
      run: |
        cd testing_mygame
        evennia test

  mysql:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8]
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_USER: evennia
          MYSQL_PASSWORD: password
          MYSQL_DATABASE: evennia
          MYSQL_ROOT_PASSWORD: password
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3
        ports:
          - 3306:3306
    steps:
     - uses: actions/checkout@v2
     - name: Set up Python ${{ matrix.python-version }}
       uses: actions/setup-python@v1
       with:
         python-version: ${{ matrix.python-version }}
     - name: Install dependencies
       run: |
         python -m pip install --upgrade pip
         pip install -r requirements.txt
         pip install mysqlclient
         pip install -e .
     - name: Create Evennia game
       run: |
         make format
         evennia --init testing_mygame
         cp .travis/mysql_settings.py testing_mygame/server/conf/settings.py
         cd testing_mygame
         evennia migrate
         evennia collectstatic --noinput
     - name: Test with Evennia Test
       run: |
         cd testing_mygame
         evennia test